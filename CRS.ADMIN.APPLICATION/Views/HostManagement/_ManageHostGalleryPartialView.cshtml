@model CRS.ADMIN.APPLICATION.Models.HostManagement.HostManageGalleryImageModel
<style>

    #cropModal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        justify-content: center;
        align-items: center;
    }

    #imageToCrop {
        max-width: 90%;
        max-height: 80vh;
    }
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
<div id="add-new-gallery"
     class="drawer-close-disable  flex justify-end fixed top-0 right-0 z-40 h-screen overflow-y-auto transition-transform translate-x-full "
     tabindex="-1" aria-labelledby="drawer-right-label">

    <div class="bg-white w-[574px] drawer-container relative">
        <div class="drawer-form-container sticky top-0 z-[5] ">
            <div class="drawer-form flex justify-between bg-secondary-color-pink py-[16px] px-[24px] h-[56px]">
                <div>@CRS.ADMIN.APPLICATION.Resources.Resource.Manage_Gallery</div>
                <button type="button" data-drawer-hide="add-new-gallery" aria-controls="add-new-gallery"
                        class="text-[20px]">
                    <i class="las la-window-close text-white" onclick="CancelFunction();"></i>
                </button>
            </div>
        </div>
        <div class="p-[24px]">
            @using (Html.BeginForm("ManageGallery", "HostManagement", FormMethod.Post, new { @id = "ManageHostGalleryForm", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.AgentId);
                @Html.HiddenFor(model => model.HostId);
                @Html.HiddenFor(model => model.clubCategory);
                if (!string.IsNullOrEmpty(Model.GalleryId))
                {
                    @Html.HiddenFor(model => model.GalleryId);
                    @Html.HiddenFor(model => model.ImagePath);
                }
                <input type="hidden" name="StartIndexBck" value="@ViewBag.StartIndexBck" />
                <input type="hidden" name="PageSizeBck" value="@ViewBag.PageSizeBck" />
                <input type="hidden" name="SearchFilterBck" value="@ViewBag.SearchFilterBck" />
                <div class="grid grid-cols-1 gap-x-[20px] gap-y-[16px]">
                    <div class="input-field-common">
                        <label for="email" class="block mb-[12px] text-sm font-medium text-secondary-100 ">
                            @CRS.ADMIN.APPLICATION.Resources.Resource.Title
                        </label>

                        @*<input type="text" class="w-full" placeholder="Banner" name="ImageTitle" value="@Model.ImageTitle" required>*@
                        @Html.TextBoxFor(model => model.ImageTitle, new
                   {
                       @class = "w-full",
                       @placeholder = @CRS.ADMIN.APPLICATION.Resources.Resource.Banner,
                           autocomplete = "off",
                       maxLength = "50"
                   })
                        <span class="error">
                            @Html.ValidationMessageFor(m => m.ImageTitle)
                        </span>
                    </div>


                    <div>
                        <label for="email" class="block mb-[12px] text-sm font-medium text-secondary-100 ">
                            @CRS.ADMIN.APPLICATION.Resources.Resource.Gallery_Banner
                        </label>
                        <div class="file-upload-common">

                            <label for="file_input-gallery" class="custom-file-upload w-[128px] flex-none text-ellipsis-customer">
                                <span> @CRS.ADMIN.APPLICATION.Resources.Resource.Custom_Upload</span>
                            </label>
                            <input id="file_input-gallery" type="file" style="display:none;" name="Image_Path" required>
                            <p id="file_name_display-gallery"
                               class="w-max h-[23px] overflow-hidden pl-2 text-[#686868]">
                                @if (string.IsNullOrEmpty(Model.ImagePath))
                                {
                                    @CRS.ADMIN.APPLICATION.Resources.Resource.No_File_Choosen
                                }
                                else
                                {
                                    string fileName = Path.GetFileName(Model.ImagePath);
                                    @fileName
                                }
                            </p>
                        </div>
                        <!-- Modal for cropping -->
                        <div id="cropModal" class="hidden fixed inset-0 bg-gray-800 bg-opacity-75 flex items-center justify-center">
                            <div class="bg-white p-4 rounded-lg max-w-lg w-full max-h-[80vh] overflow-auto">
                                <div class="mb-4">
                                    <img id="imageToCrop" src="" alt="Image to crop" class="max-w-full">
                                </div>
                                <div class="flex justify-end">
                                    <button id="cropImageButton" class="bg-blue-500 text-white px-4 py-2 rounded-md">Crop</button>
                                    <button id="cancelCropButton" class="ml-2 bg-gray-500 text-white px-4 py-2 rounded-md">Cancel</button>
                                </div>
                            </div>
                        </div>
                        <div class="text-xs text-error mt-[8px]">
                            @CRS.ADMIN.APPLICATION.Resources.Resource.Note:
                            @CRS.ADMIN.APPLICATION.Resources.Resource.and_Maximum_file_size_is_5_MB .
                        </div>
                    </div>

                </div>

                <div class="flex justify-end py-[16px] ">
                    <div class="flex gap-[24px]">
                        <div class="btn btn-secondary rounded-[4px] px-4" data-drawer-hide="add-new-gallery"
                             aria-controls="add-new-gallery" onclick="CancelFunction();">@CRS.ADMIN.APPLICATION.Resources.Resource.Cancel</div>
                            <div class="btn btn-primary rounded-[4px] px-4">
                                <button type="submit">@CRS.ADMIN.APPLICATION.Resources.Resource.Create</button>
                            </div>
                        </div>

                    </div>
                }
        </div>

    </div>

</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        let cropper;
        const modal = document.getElementById('cropModal');
        const imageToCrop = document.getElementById('imageToCrop');
        const fileInput = document.getElementById('file_input-gallery');
        const fileNameDisplay = document.getElementById('file_name_display-gallery');

        fileInput.addEventListener('change', function (event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    imageToCrop.src = e.target.result;
                    modal.style.display = 'flex';

                    if (cropper) {
                        cropper.replace(e.target.result);
                    } else {
                        cropper = new Cropper(imageToCrop, {
                            //aspectRatio: 298 / 181, // Maintain aspect ratio
                            aspectRatio: 294 / 372,
                            viewMode: 1,
                            background: false,
                            zoomable: true,
                            scalable: true,
                            responsive: true,
                            autoCropArea: 1,
                        });
                    }

                    fileNameDisplay.textContent = file.name;
                };
                reader.readAsDataURL(file);
            }
        });

        document.getElementById('cropImageButton').addEventListener('click', function (event) {
            event.preventDefault();
            if (cropper) {
                // Get a higher resolution cropped canvas
                const canvas = cropper.getCroppedCanvas({
                    //width: 1600, // Increased width for high resolution
                    //height: 800, // Increased height for high resolution
                    width: 316, // Increased width for high resolution
                    height: 394, // Increased height for high resolution
                    imageSmoothingEnabled: true,
                    imageSmoothingQuality: 'high',
                });

                if (canvas) {
                    canvas.toBlob(function (blob) {
                        const formData = new FormData();
                        formData.append('croppedImage', blob);
                        console.log('Cropped image ready to upload', formData);

                        const reader = new FileReader();
                        reader.onload = function () {
                            const dataUrl = reader.result;
                            const dataTransfer = new DataTransfer();
                            const file = new File([blob], "croppedImage.jpg", { type: "image/jpeg" });
                            dataTransfer.items.add(file);
                            fileInput.files = dataTransfer.files;
                        };
                        reader.readAsDataURL(blob);

                        modal.style.display = 'none';
                        cropper.destroy();
                        cropper = null;
                    }, 'image/jpeg', 0.95);
                }
            }
        });

        document.getElementById('cancelCropButton').addEventListener('click', function () {
            modal.style.display = 'none';
            $('#file_input_logo').val('');
            if (cropper) {
                cropper.destroy();
                cropper = null;
            }
        });
    });
</script>