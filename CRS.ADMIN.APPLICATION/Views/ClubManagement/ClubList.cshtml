@model CRS.ADMIN.APPLICATION.Models.ClubManagement.ClubManagementCommonModel
@{
    ViewBag.Title = "Club List";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var _ManageClubModel = Model.ManageClubModel as CRS.ADMIN.APPLICATION.Models.ClubManagement.ManageClubModel;
    var _ClubHoldModel = Model.ClubHoldModel as CRS.ADMIN.APPLICATION.Models.ClubManagement.ManageClubModel;
    var _ManageTag = Model.ManageTag as CRS.ADMIN.APPLICATION.Models.TagManagement.ManageTag;
    var _ManageManager = Model.ManageManager as CRS.ADMIN.APPLICATION.Models.ClubManagerModel.ManageManagerModel;
}

<div class="px-8 py-4">
    @Html.AntiForgeryToken()

    <!-- title  -->
    <div class="flex flex-col  gap-6">
        <div>
            <div class="heading-title">
                @CRS.ADMIN.APPLICATION.Resources.Resource.ClubManagement
            </div>
            <div class="span-title-light-gray">
                @CRS.ADMIN.APPLICATION.Resources.Resource.Club_Management_Supporting_Text
            </div>
        </div>
        <!-- container  -->
        <div id="tab1" class="tab-content-plane">
            <div class="flex flex-col gap-8">
                <div id="tab1" class="tab-content">
                    <div class="flex gap-4 mb-8 border-b ">
                        <div id="tab1Link" class="styleCss active px-1 pb-4 cursor-pointer active" onclick="changeTabV1('all', 'tab1Link')">
                            @CRS.ADMIN.APPLICATION.Resources.Resource.ClubTabApproved
                        </div>
                        <div id="tab2Link" class="styleCss px-1 pb-4 cursor-pointer" onclick="changeTabV1('pending', 'tab2Link')">
                            @CRS.ADMIN.APPLICATION.Resources.Resource.ClubTabPending
                        </div>

                        <div id="tab3Link" class="styleCss px-1 pb-4 cursor-pointer" onclick="changeTabV1('rejected', 'tab3Link')">
                            @CRS.ADMIN.APPLICATION.Resources.Resource.ClubTabRejected
                        </div>
                    </div>
                    @*<div class="flex justify-between pb-[24px]">
                            <form action="/ClubManagement/ClubList" method="get">

                                @Html.HiddenFor(model => model.ListType)
                                <div class="relative input-search-wrapper">
                                    <div class="absolute inset-y-0 left-0 flex items-center pl-[16px] pointer-events-none">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="21" viewBox="0 0 20 21" fill="none">
                                            <path d="M17.5 18L13.875 14.375M15.8333 9.66667C15.8333 13.3486 12.8486 16.3333 9.16667 16.3333C5.48477 16.3333 2.5 13.3486 2.5 9.66667C2.5 5.98477 5.48477 3 9.16667 3C12.8486 3 15.8333 5.98477 15.8333 9.66667Z"
                                                  stroke="#667085" stroke-width="1.66667" stroke-linecap="round" stroke-linejoin="round" />
                                        </svg>
                                    </div>
                                    <input type="search"
                                           id="default-search"
                                           class="input-search block w-full "
                                           placeholder="@CRS.ADMIN.APPLICATION.Resources.Resource.Search"
                                           value="@Model.SearchFilter"
                                           name="SearchFilter">
                                </div>
                            </form>
                            <div class="flex gap-6">
                                <div class="export-button h-[40px]" onclick="exportExcel('table-id', 'Club')">
                                    <img src="~/Content/assets_new/images/club/download-solid.svg">@CRS.ADMIN.APPLICATION.Resources.Resource.Export
                                </div>

                                <div class="btn btn-primary gap-[8px] h-[40px]" data-drawer-target="add-new-host-club"
                                     data-drawer-show="add-new-host-club" data-drawer-placement="right" data-drawer-backdrop="false"
                                     aria-controls="drawer-disabled-backdrop" id="add-new-id">
                                    <img src="~/Content/assets_new/images/plus-circle-solid.svg" />
                                    @CRS.ADMIN.APPLICATION.Resources.Resource.Add_New
                                </div>
                            </div>
                        </div>*@

                    <div id="all" class="pane active">
                        @if (!string.IsNullOrEmpty(Convert.ToString(Model.ClubListModel)))
                        {
                            @Html.Partial("_ApprovedClubListPartialView", Model)
                        }

                    </div>

                    @*pending table*@

                    <div id="pending" class="pane" style="display: none;">
                        @if (!string.IsNullOrEmpty(Convert.ToString(Model.ClubPendingListModel)))
                        {
                            @Html.Partial("_PendingClubListPartialView", Model)
                        }
                    </div>

                    @*rejected table*@

                    <div id="rejected" class="pane" style="display: none;">
                        @if (!string.IsNullOrEmpty(Convert.ToString(Model.ClubRejectedListModel)))
                        {
                            @Html.Partial("_RejectedClubListPartialView", Model)
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- add new host from -->
@Html.Partial("_ManageTagPartialView", _ManageTag)
@Html.Partial("_ManageManagerPartialView", _ManageManager)
<!-- Confirmation  -->
<div id="add-new-host-modal-save" tabindex="-1" aria-hidden="true"
     class="fixed top-0 left-0 right-0 z-50 hidden w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full"
     style="align-items: flex-start;">
    <div class="relative max-w-2xl max-h-full w-[412px] px-4 pt-[40px] pb-[46px]  mt-24">
        <!-- Modal content -->
        <div class="relative bg-white rounded-lg shadow">
            <!-- Modal header -->

            <button type="button"
                    class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center absolute top-[24px] right-[20px] "
                    data-modal-hide="add-new-host-modal-save">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
                    <rect y="0.621094" width="24" height="24" rx="12" fill="#FAFAFA" />
                    <path d="M5.41406 4.95703L4.33594 6.03516L10.9219 12.6211L4.33594 19.207L5.41406 20.2852L12 13.6992L18.5859 20.2852L19.6641 19.207L13.0781 12.6211L19.6641 6.03516L18.5859 4.95703L12 11.543L5.41406 4.95703Z"
                          fill="#7A7A7A" />
                </svg>
            </button>
            <!-- Modal body -->
            <div class="grid gap-6 px-[20px] py-8">
                <div class="flex justify-center mb-4">
                    <img src="~/Content/assets_new/images/save-check.svg" />

                </div>
                <div class="grid gap-[20px] text-[#062937] mb-[44px]">
                    <div class="text-base text-secondary-text-2 text-center font-semibold">
                        Update Profile
                    </div>
                    <div class="text-[14px] text-secondary-text-2 text-center">
                        Congratulations, you just added a new club.
                    </div>
                </div>
                <div class="flex justify-end">
                    <div class="flex gap-8">
                        <button data-modal-hide="add-new-host-modal-save"
                                class="btn btn-primary-normal rounded-[4px] text-sm gap-2 w-[130px]"
                                data-drawer-target="add-new-host-club" data-drawer-show="add-new-host-club"
                                data-drawer-placement="right" data-drawer-backdrop="false"
                                aria-controls="drawer-disabled-backdrop">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16"
                                 height="16" viewBox="0 0 16 16" fill="none">
                                <path d="M8 1.5C4.41602 1.5 1.5 4.41602 1.5 8C1.5 11.584 4.41602 14.5 8 14.5C11.584 14.5 14.5 11.584 14.5 8C14.5 4.41602 11.584 1.5 8 1.5ZM8 2.5C11.043 2.5 13.5 4.95703 13.5 8C13.5 11.043 11.043 13.5 8 13.5C4.95703 13.5 2.5 11.043 2.5 8C2.5 4.95703 4.95703 2.5 8 2.5ZM7.5 5V7.5H5V8.5H7.5V11H8.5V8.5H11V7.5H8.5V5H7.5Z"
                                      fill="#D75A8B" />
                            </svg>Add New
                        </button>

                        <button class="btn btn-primary-default rounded-[4px] w-[108px] gap-2"
                                data-modal-hide="add-new-host-modal-save">
                            <svg xmlns="http://www.w3.org/2000/svg" width="17"
                                 height="16" viewBox="0 0 17 16" fill="none">
                                <path d="M5.71997 7.33117H13.8346V8.6645H5.71997L9.29597 12.2405L8.3533 13.1832L3.16797 7.99783L8.3533 2.8125L9.29597 3.75517L5.71997 7.33117Z"
                                      fill="white" />
                            </svg>Back
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- drawer component -->
<!--Accept Reject Modal-->
<div id="reset-customer-passwordconfirmation" tabindex="-1" aria-hidden="true" class="fixed top-0 left-0 right-0 z-50 hidden w-full
     p-4 overflow-x-hidden overflow-y-auto
     md:inset-0 h-[calc(100%-1rem)] max-h-full " style="align-items: flex-start;">
    <div class="relative max-w-2xl max-h-full w-[412px] px-4 pt-[40px] pb-[46px] mt-24">
        <!-- Modal content -->
        <div class="relative bg-white rounded-lg shadow">
            <!-- Modal header -->
            <button type="button"
                    class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center absolute top-[24px] right-[20px] "
                    data-modal-hide="reset-customer-passwordconfirmation">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
                    <rect y="0.621094" width="24" height="24" rx="12" fill="#FAFAFA" />
                    <path d="M5.41406 4.95703L4.33594 6.03516L10.9219 12.6211L4.33594 19.207L5.41406 20.2852L12 13.6992L18.5859 20.2852L19.6641 19.207L13.0781 12.6211L19.6641 6.03516L18.5859 4.95703L12 11.543L5.41406 4.95703Z"
                          fill="#7A7A7A" />
                </svg>
            </button>
            <!-- Modal body -->
            <div class="grid gap-6 px-[20px] py-8">
                <div class="text-[#333] font-semibold pb-[11px] border-b border-[#eeeeee]">@CRS.ADMIN.APPLICATION.Resources.Resource.Confirmation</div>
                <div class="grid gap-[20px] text-[#062937] mb-[45px]">
                    <div class="text-[14px] text-secondary-text-2 text-start" id="confirmationMessage">
                        @CRS.ADMIN.APPLICATION.Resources.Resource.password_reset_confirmation.
                    </div>
                </div>
                <div class="flex justify-end">
                    <div class="flex gap-2 justify-end mt-[45px]">
                        <input id="request_id" value="" hidden />
                        <div class="btn btn-secondary w-[110px]" data-modal-hide="reset-customer-passwordconfirmation">@CRS.ADMIN.APPLICATION.Resources.Resource.No</div>
                        <div class="btn btn-primary w-[110px]" onclick="ResetPassword()" data-val="" id="reset_customer_id">@CRS.ADMIN.APPLICATION.Resources.Resource.Yes</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--Accept Reject Modal-->
<!--Accept Reject Modal For Delete-->
<div id="delete-club-confirmation" tabindex="-1" aria-hidden="true" class="fixed top-0 left-0 right-0 z-50 hidden w-full
     p-4 overflow-x-hidden overflow-y-auto
     md:inset-0 h-[calc(100%-1rem)] max-h-full " style="align-items: flex-start;">
    <div class="relative max-w-2xl max-h-full w-[412px] px-4 pt-[40px] pb-[46px] mt-24">
        <!-- Modal content -->
        <div class="relative bg-white rounded-lg shadow">
            <!-- Modal header -->
            <button type="button"
                    class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center absolute top-[24px] right-[20px] "
                    data-modal-hide="delete-club-confirmation">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
                    <rect y="0.621094" width="24" height="24" rx="12" fill="#FAFAFA" />
                    <path d="M5.41406 4.95703L4.33594 6.03516L10.9219 12.6211L4.33594 19.207L5.41406 20.2852L12 13.6992L18.5859 20.2852L19.6641 19.207L13.0781 12.6211L19.6641 6.03516L18.5859 4.95703L12 11.543L5.41406 4.95703Z"
                          fill="#7A7A7A" />
                </svg>
            </button>
            <!-- Modal body -->
            <div class="grid gap-6 px-[20px] py-8">
                <div class="text-[#333] font-semibold pb-[11px] border-b border-[#eeeeee]">@CRS.ADMIN.APPLICATION.Resources.Resource.Confirmation</div>
                <div class="grid gap-[20px] text-[#062937] mb-[45px]">
                    <div class="text-[14px] text-secondary-text-2 text-start">
                        @CRS.ADMIN.APPLICATION.Resources.Resource.Are_you_sure_you_want_to_delete_this_club
                    </div>
                </div>
                <div class="flex justify-end">
                    <div class="flex gap-2 justify-end mt-[45px]">
                        <input id="request_id" value="" hidden />
                        <div class="btn btn-secondary w-[110px]" data-modal-hide="delete-club-confirmation">@CRS.ADMIN.APPLICATION.Resources.Resource.No</div>
                        <div class="btn btn-primary w-[110px]" onclick="DeleteFunction()" data-val="" id="delete_club_id">@CRS.ADMIN.APPLICATION.Resources.Resource.Yes</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--Accept Reject Modal For Delete-->
<!--Accept Reject Modal For club-->
<div id="approve-confirmation" tabindex="-1" aria-hidden="true" class="fixed top-0 left-0 right-0 z-50 hidden w-full
     p-4 overflow-x-hidden overflow-y-auto
     md:inset-0 h-[calc(100%-1rem)] max-h-full " style="align-items: flex-start;">
    <div class="relative max-w-2xl max-h-full w-[412px] px-4 pt-[40px] pb-[46px] mt-24">
        <!-- Modal content -->
        <div class="relative bg-white rounded-lg shadow">
            <!-- Modal header -->
            <button type="button"
                    class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center absolute top-[24px] right-[20px] "
                    data-modal-hide="approve-confirmation">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
                    <rect y="0.621094" width="24" height="24" rx="12" fill="#FAFAFA" />
                    <path d="M5.41406 4.95703L4.33594 6.03516L10.9219 12.6211L4.33594 19.207L5.41406 20.2852L12 13.6992L18.5859 20.2852L19.6641 19.207L13.0781 12.6211L19.6641 6.03516L18.5859 4.95703L12 11.543L5.41406 4.95703Z"
                          fill="#7A7A7A" />
                </svg>
            </button>
            <!-- Modal body -->
            <div class="grid gap-6 px-[20px] py-8">
                <div class="text-[#333] font-semibold pb-[11px] border-b border-[#eeeeee]">@CRS.ADMIN.APPLICATION.Resources.Resource.Confirmation</div>
                <div class="grid gap-[20px] text-[#062937] mb-[45px]">
                    <div class="text-[14px] text-secondary-text-2 text-start" id="confirmationMessage">
                        @CRS.ADMIN.APPLICATION.Resources.Resource.clubApprovalMessage
                    </div>
                </div>
                <div class="flex justify-end">
                    <div class="flex gap-2 justify-end mt-[45px]">
                        <input id="request_id" value="" hidden />
                        <div class="btn btn-secondary w-[110px]" data-modal-hide="approve-confirmation">@CRS.ADMIN.APPLICATION.Resources.Resource.clubNo</div>
                        <div class="btn btn-primary w-[110px]" onclick="ApproveClubManagerFunction()" data-val1="" data-val2="" data-val3="" id="approve_id">@CRS.ADMIN.APPLICATION.Resources.Resource.clubYes</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div id="reject-confirmation" tabindex="-1" aria-hidden="true" class="fixed top-0 left-0 right-0 z-50 hidden w-full
     p-4 overflow-x-hidden overflow-y-auto
     md:inset-0 h-[calc(100%-1rem)] max-h-full " style="align-items: flex-start;">
    <div class="relative max-w-2xl max-h-full w-[412px] px-4 pt-[40px] pb-[46px] mt-24">
        <!-- Modal content -->
        <div class="relative bg-white rounded-lg shadow">
            <!-- Modal header -->
            <button type="button"
                    class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center absolute top-[24px] right-[20px] "
                    data-modal-hide="reject-confirmation">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
                    <rect y="0.621094" width="24" height="24" rx="12" fill="#FAFAFA" />
                    <path d="M5.41406 4.95703L4.33594 6.03516L10.9219 12.6211L4.33594 19.207L5.41406 20.2852L12 13.6992L18.5859 20.2852L19.6641 19.207L13.0781 12.6211L19.6641 6.03516L18.5859 4.95703L12 11.543L5.41406 4.95703Z"
                          fill="#7A7A7A" />
                </svg>
            </button>
            <!-- Modal body -->
            <div class="grid gap-6 px-[20px] py-8">
                <div class="text-[#333] font-semibold pb-[11px] border-b border-[#eeeeee]">@CRS.ADMIN.APPLICATION.Resources.Resource.Confirmation</div>
                <div class="grid gap-[20px] text-[#062937] mb-[45px]">
                    <div class="text-[14px] text-secondary-text-2 text-start" id="confirmationMessage">
                        @CRS.ADMIN.APPLICATION.Resources.Resource.clubRejectMessage
                    </div>
                </div>
                <div class="flex justify-end">
                    <div class="flex gap-2 justify-end mt-[45px]">
                        <input id="request_id" value="" hidden />
                        <div class="btn btn-secondary w-[110px]" data-modal-hide="reject-confirmation">@CRS.ADMIN.APPLICATION.Resources.Resource.clubNo</div>
                        <div class="btn btn-primary w-[110px]" onclick="RejectClubManagerFunction()" data-val1="" data-val2="" data-val3="" id="reject_id">@CRS.ADMIN.APPLICATION.Resources.Resource.clubYes</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--block unblock Reject Modal For club-->
<div id="unblock-confirmation" tabindex="-1" aria-hidden="true" class="fixed top-0 left-0 right-0 z-50 hidden w-full
     p-4 overflow-x-hidden overflow-y-auto
     md:inset-0 h-[calc(100%-1rem)] max-h-full " style="align-items: flex-start;">
    <div class="relative max-w-2xl max-h-full w-[412px] px-4 pt-[40px] pb-[46px] mt-24">
        <!-- Modal content -->
        <div class="relative bg-white rounded-lg shadow">
            <!-- Modal header -->
            <button type="button"
                    class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center absolute top-[24px] right-[20px] "
                    data-modal-hide="unblock-confirmation">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
                    <rect y="0.621094" width="24" height="24" rx="12" fill="#FAFAFA" />
                    <path d="M5.41406 4.95703L4.33594 6.03516L10.9219 12.6211L4.33594 19.207L5.41406 20.2852L12 13.6992L18.5859 20.2852L19.6641 19.207L13.0781 12.6211L19.6641 6.03516L18.5859 4.95703L12 11.543L5.41406 4.95703Z"
                          fill="#7A7A7A" />
                </svg>
            </button>
            <!-- Modal body -->
            <div class="grid gap-6 px-[20px] py-8">
                <div class="text-[#333] font-semibold pb-[11px] border-b border-[#eeeeee]">@CRS.ADMIN.APPLICATION.Resources.Resource.Confirmation</div>
                <div class="grid gap-[20px] text-[#062937] mb-[45px]">
                    <div class="text-[14px] text-secondary-text-2 text-start" id="confirmationMessage">
                        @CRS.ADMIN.APPLICATION.Resources.Resource.Are_you_sure_you_want_to_unblock_this_club
                    </div>
                </div>
                <div class="flex justify-end">
                    <div class="flex gap-2 justify-end mt-[45px]">
                        <input id="request_id" value="" hidden />
                        <div class="btn btn-secondary w-[110px]" data-modal-hide="unblock-confirmation">@CRS.ADMIN.APPLICATION.Resources.Resource.clubNo</div>
                        <div class="btn btn-primary w-[110px]" onclick="UnBlockEvent()" data-val1="" data-val2="" id="unblock_id">@CRS.ADMIN.APPLICATION.Resources.Resource.clubYes</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<div id="block-confirmation" tabindex="-1" aria-hidden="true" class="fixed top-0 left-0 right-0 z-50 hidden w-full 
     p-4 overflow-x-hidden overflow-y-auto
     md:inset-0 h-[calc(100%-1rem)] max-h-full " style="align-items: flex-start; ">
    <div class="relative max-w-2xl max-h-full w-[412px] px-4 pt-[40px] pb-[46px] mt-24">
        <!-- Modal content -->
        <div class="relative bg-white rounded-lg shadow">
            <!-- Modal header -->
            <button type="button"
                    class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center absolute top-[24px] right-[20px] "
                    data-modal-hide="block-confirmation">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
                    <rect y="0.621094" width="24" height="24" rx="12" fill="#FAFAFA" />
                    <path d="M5.41406 4.95703L4.33594 6.03516L10.9219 12.6211L4.33594 19.207L5.41406 20.2852L12 13.6992L18.5859 20.2852L19.6641 19.207L13.0781 12.6211L19.6641 6.03516L18.5859 4.95703L12 11.543L5.41406 4.95703Z"
                          fill="#7A7A7A" />
                </svg>
            </button>
            <!-- Modal body -->
            <div class="grid gap-6 px-[20px] py-8">
                <div class="text-[#333] font-semibold pb-[11px] border-b border-[#eeeeee]">@CRS.ADMIN.APPLICATION.Resources.Resource.Confirmation</div>
                <div class="grid gap-[20px] text-[#062937] mb-[45px]">
                    <div class="text-[14px] text-secondary-text-2 text-start" id="confirmationMessage">
                        @CRS.ADMIN.APPLICATION.Resources.Resource.Are_you_sure_you_want_to_block_this_club
                    </div>
                </div>
                <div class="flex justify-end">
                    <div class="flex gap-2 justify-end mt-[45px]">
                        <input id="request_id" value="" hidden />
                        <div class="btn btn-secondary w-[110px]" data-modal-hide="block-confirmation">@CRS.ADMIN.APPLICATION.Resources.Resource.clubNo</div>
                        <div class="btn btn-primary w-[110px]" onclick="BlockEvent()" data-val1="" data-val2="" id="block_id">@CRS.ADMIN.APPLICATION.Resources.Resource.clubYes</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- block and unblock -->
@Html.Partial("_ManageClubPartialView", _ManageClubModel)
@Html.Partial("_ClubHoldDetailPartialView", _ClubHoldModel)
@section scripts
{
    <script src="https://code.jquery.com/ui/1.13.0/jquery-ui.js"></script>
    <script src="~/Content/assets_new/js/calendar-management.js"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.13.0/themes/base/jquery-ui.css">
    <script>
    function openApproveModal(sno, type, agentid)
    {
      const modalTarget = document.querySelector("[data-modal-target='approve-confirmation']");
     const confirmationMessageElement = document.getElementById("confirmationMessage");
     confirmationMessageElement.textContent = ` ${name} , @CRS.ADMIN.APPLICATION.Resources.Resource.clubApprovalMessage ? `;
     const modal = document.getElementById("approve-confirmation");
     modal.classList.remove("hidden");
     $('#approve_id').attr('data-val1', sno);
     $('#approve_id').attr('data-val2', type);
     $('#approve_id').attr('data-val3', agentid);
     modal.setAttribute("aria-hidden", "false");
    }


    function openRejectModal(sno,type, agentid) {
    const modalTarget = document.querySelector("[data-modal-target='reject-confirmation']");
    const confirmationMessageElement = document.getElementById("confirmationMessage");
    confirmationMessageElement.textContent = ` ${name} , @CRS.ADMIN.APPLICATION.Resources.Resource.clubRejectMessage ? `;
    const modal = document.getElementById("reject-confirmation");
    modal.classList.remove("hidden");
    $('#reject_id').attr('data-val1', sno);
    $('#reject_id').attr('data-val2', type);
    $('#reject_id').attr('data-val3', agentid);
    modal.setAttribute("aria-hidden", "false");
}
    </script>
    <script>
     function openResetCustomerPasswordModal(name, agentid) {
     const modalTarget = document.querySelector("[data-modal-target='reset-customer-passwordconfirmation']");
     const confirmationMessageElement = document.getElementById("confirmationMessage");
     // Set the message content in the modal
     confirmationMessageElement.textContent = ` ${name} , @CRS.ADMIN.APPLICATION.Resources.Resource.password_reset_confirmation ? `;
     // Open the modal
     const modal = document.getElementById("reset-customer-passwordconfirmation");
     modal.classList.remove("hidden");
     $('#reset_customer_id').attr('data-val', agentid);
     modal.setAttribute("aria-hidden", "false");
     }

    function ResetPassword() {
        const id = $('#reset_customer_id').attr('data-val');
        var jsonData = {
            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(),
            AgentId: id
        };
        let search_filter = $('#default-search').val();
        const start_index_val = @ViewBag.StartIndex;
        const page_size = @ViewBag.PageSize;
        $.ajax({
            url: '/ClubManagement/ResetClubPassword',
            type: 'POST',
            data: jsonData,
            success: function (response) {
                window.location.href = '/ClubManagement/ClubList?SearchFilter=' + search_filter + '&StartIndex=' + start_index_val + '&PageSize=' + page_size;
            },
            error: function (error) {
                window.location.href = '/ClubManagement/ClubList?SearchFilter=' + search_filter + '&StartIndex=' + start_index_val + '&PageSize=' + page_size;
            }
        });
    }


    function openDeleteClubModal(agentid)
    {
       const modalTarget = document.querySelector("[data-modal-target='delete-club-confirmation']");
       const modal = document.getElementById("delete-club-confirmation");
       modal.classList.remove("hidden");
       $('#delete_club_id').attr('data-val', agentid);
       modal.setAttribute("aria-hidden", "false");
    }

    function DeleteFunction() {
        const id = $('#delete_club_id').attr('data-val');
        var RequestVerificationToken = $('input[name="__RequestVerificationToken"]').val();
        let search_filter = $('#default-search').val();
        const start_index_val = @ViewBag.StartIndex;
        const page_size = @ViewBag.PageSize;

        $.ajax({
             type: "POST",
             url: '@Url.Action("DeleteClub", "ClubManagement")',
             data: {
                 '__RequestVerificationToken': RequestVerificationToken, 'AgentId': id},
            success: function (response) {
                window.location.href = '/ClubManagement/ClubList?SearchFilter=' + search_filter + '&StartIndex=' + start_index_val + '&PageSize=' + page_size  ;
                //window.location.reload();
             },
            error: function (error) {
                window.location.href = '/ClubManagement/ClubList?SearchFilter=' + search_filter + '&StartIndex=' + start_index_val + '&PageSize=' + page_size;
                //window.location.reload();
             }
         })
        }

      function openBlockEventModal(agentid) {
      const modalTarget = document.querySelector("[data-modal-target='block-confirmation']");
      const modal = document.getElementById("block-confirmation");
      modal.classList.remove("hidden");
      $('#block_id').attr('data-val1', agentid);
      $('#block_id').attr('data-val2', 'B');
      modal.setAttribute("aria-hidden", "false");
     }
     function openUnBlockEventModal(agentid) {
     const modalTarget = document.querySelector("[data-modal-target='unblock-confirmation']");
      const modal = document.getElementById("unblock-confirmation");
      modal.classList.remove("hidden");
      $('#unblock_id').attr('data-val1', agentid);
      $('#unblock_id').attr('data-val2', 'A');
      modal.setAttribute("aria-hidden", "false");
     }
    function BlockEvent() {
     const id = $('#block_id').attr('data-val1');
     const Status = $('#block_id').attr('data-val2');
     var RequestVerificationToken = $('input[name="__RequestVerificationToken"]').val();
     let search_filter = $('#default-search').val();
     const start_index_val = @ViewBag.StartIndex;
     const page_size = @ViewBag.PageSize;

     $.ajax({
          type: "POST",
          url: '@Url.Action("BlockClub", "ClubManagement")',
          data: {
              '__RequestVerificationToken': RequestVerificationToken, 'AgentId': id,'Status':Status},
         success: function (response) {
             window.location.href = '/ClubManagement/ClubList?SearchFilter=' + search_filter + '&StartIndex=' + start_index_val + '&PageSize=' + page_size  ;
             //window.location.reload();
          },
         error: function (error) {
             window.location.href = '/ClubManagement/ClubList?SearchFilter=' + search_filter + '&StartIndex=' + start_index_val + '&PageSize=' + page_size;
             //window.location.reload();
          }
      })
        }
    function UnBlockEvent() {
    const id = $('#unblock_id').attr('data-val1');
    const Status = $('#unblock_id').attr('data-val2');
    var RequestVerificationToken = $('input[name="__RequestVerificationToken"]').val();
    let search_filter = $('#default-search').val();
    const start_index_val = @ViewBag.StartIndex;
    const page_size = @ViewBag.PageSize;

    $.ajax({
         type: "POST",
         url: '@Url.Action("UnBlockClub", "ClubManagement")',
         data: {
             '__RequestVerificationToken': RequestVerificationToken, 'AgentId': id,'Status':Status},
        success: function (response) {
            window.location.href = '/ClubManagement/ClubList?SearchFilter=' + search_filter + '&StartIndex=' + start_index_val + '&PageSize=' + page_size  ;
            //window.location.reload();
         },
        error: function (error) {
            window.location.href = '/ClubManagement/ClubList?SearchFilter=' + search_filter + '&StartIndex=' + start_index_val + '&PageSize=' + page_size;
            //window.location.reload();
         }
     })
    }
    </script>
    <script>
        const checkbox = document.getElementById('tag1');
        const tagInput = document.getElementById('tagInput');

        if (checkbox.checked) {
            tagInput.style.display = 'block';
        }

        checkbox.addEventListener('change', function () {
            if (this.checked) {
                tagInput.style.display = 'block';
                $('#Tag1Status').val('A');
            } else {
                tagInput.style.display = 'none';
                $('#Tag1Status').val('B');
            }
        });
    </script>
    <script>
        const checkbox2 = document.getElementById('tag2');
        const tagInput2 = document.getElementById('tagInput2');

        checkbox2.addEventListener('change', function () {
            if (this.checked) {
                tagInput2.style.display = 'block';
                $('#Tag2Status').val('A');
            } else {
                tagInput2.style.display = 'none';
                $('#Tag2Status').val('B');
            }
        });
    </script>
    <script>
        const checkbox3 = document.getElementById('tag3');
        const tagInput3 = document.getElementById('tagInput3');

        checkbox3.addEventListener('change', function () {
            if (this.checked) {
                tagInput3.style.display = 'block';
                $('#Tag3Status').val('A');
            } else {
                tagInput3.style.display = 'none';
                $('#Tag3Status').val('B');
            }
        });
    </script>
    <script>
        const checkbox4 = document.getElementById('tag4');
        const tagInput4 = document.getElementById('tagInput4');

        checkbox4.addEventListener('change', function () {
            if (this.checked) {
                $('#Tag4Status').val('A');
                tagInput4.style.display = 'block';
            } else {
                $('#Tag4Status').val('B');
                tagInput4.style.display = 'none';
            }
        });
    </script>
    <script>
        const checkbox5 = document.getElementById('tag5');
        const tagInput5 = document.getElementById('tagInput5');

        checkbox5.addEventListener('change', function () {
            if (this.checked) {
                tagInput5.style.display = 'block';
                $('#Tag5Status').val('A');
            } else {
                tagInput5.style.display = 'none';
                $('#Tag5Status').val('B');
            }
        });
    </script>
    <script>
        const checkbox5 = document.getElementById('tag5');
        const tagInput5 = document.getElementById('tagInput5');

        checkbox5.addEventListener('change', function () {
            if (this.checked) {
                tagInput5.style.display = 'block';
                $('#Tag5Status').val('A');
            } else {
                tagInput5.style.display = 'none';
                $('#Tag5Status').val('B');
            }
        });

    </script>
    <script>
        $(document).ready(function () {
            $('.availability-checkbox').change(function () {
                var checkedValuesContainer = $('#checkedValuesContainer');
                checkedValuesContainer.empty();
                $('.availability-checkbox').each(function () {
                    var id = $(this).attr('id');
                    var staticValue = id.split('_').pop();
                    if ($(this).is(':checked')) {
                        var inputField = $('<input>')
                            .attr('type', 'hidden')
                            .attr('name', 'checkedValues')
                            .val(staticValue + ',A');
                        checkedValuesContainer.append(inputField);
                    } else {
                        var inputField = $('<input>')
                            .attr('type', 'hidden')
                            .attr('name', 'checkedValues')
                            .val(staticValue + ',B');
                        checkedValuesContainer.append(inputField);
                    }
                });
            });
        });

    </script>
    <script>
        // Get references to the file input and file name display element
        const fileInput = document.getElementById("file_input");
        const fileNameDisplay = document.getElementById("file_name_display");

        // Add an event listener to the file input
        fileInput.addEventListener("change", function () {
            // Check if a file has been selected
            if (fileInput.files.length > 0) {
                // Display the name of the selected file
                fileNameDisplay.textContent = `${fileInput.files[0].name}`;
            } else {
                // No file selected
                fileNameDisplay.textContent = "";
            }
        });

        document.getElementById('file_input_logo').addEventListener('change', function (event) {
            const file = event.target.files[0];
            console.log('Selected file name:', file.name);
            console.log('Selected file type:', file.type);
            console.log('Selected file size:', file.size);
        });

    </script>

    <script>
        function openImage(url) {
            var newTab = window.open();
            newTab.document.write('<html><head><title>Image</title></head><body><img src="' + url + '"></body></html>');
            newTab.document.close();
        }
    </script>
    <script>
        $(document).ready(function () {
            var commaSeparatedString = "";
            if ($("#holdId").val() != "" || $("#AgentId").val() != "") {
                var Value = $('#large[name="IdentificationType"]').find("option:selected").text().trim();
                if (Value.toLowerCase() == "passport + insurance card" || Value.toLowerCase() == "パスポート + 保険証") {
                    $("#kycfront").hide();
                    $("#kycback").hide();
                    $("#Passport").show();
                    $("#Insurance").show();

                }
                else {
                    $("#kycfront").show();
                    $("#kycback").show();
                    $("#Passport").hide();
                    $("#Insurance").hide();
                }

                var val = $('#large[name="BusinessTypeDDL"]').find("option:selected").text().trim();
                if (val.toLowerCase() == "corporation" || val.toLowerCase() == "法人") {
                    $("#Corp_id").show();
                    $("#Corp_idFurigana").show();
                    $("#Corp_idCorporate").show();
                    $("#corp_representive1").show();
                    $("#corpdetail_representive1").show();
                    $("#corp_representive2").show();
                    $("#corpdetail_representive2").show();
                    //initializeValidation(val);
                }
                else {
                    $("#Corp_id").hide();
                    $("#Corp_idFurigana").hide();
                    $("#Corp_idCorporate").hide();
                    $("#corp_representive1").hide();
                    $("#corpdetail_representive1").hide();
                    $("#corp_representive2").hide();
                    $("#corpdetail_representive2").hide();
                   // initializeValidation(val);
                }
            }

            $('#large[name="BusinessTypeDDL"]').change(function () {
                var selectedValue = $(this).find("option:selected").text().trim();
                if (selectedValue.toLowerCase() == "corporation" || selectedValue.toLowerCase() == "法人") {
                    $("#Corp_id").show();
                    $("#Corp_idFurigana").show();
                    $("#Corp_idCorporate").show();
                    $("#corp_representive1").show();
                    $("#corpdetail_representive1").show();
                    $("#corp_representive2").show();
                    $("#corpdetail_representive2").show();
                   // initializeValidation(selectedValue);
                }
                else {
                    $("#Corp_id").hide();
                    $("#Corp_idFurigana").hide();
                    $("#Corp_idCorporate").hide();
                    $("#corp_representive1").hide();
                    $("#corpdetail_representive1").hide();
                    $("#corp_representive2").hide();
                    $("#corpdetail_representive2").hide();
                   /* $('#ManageClubForm').validate().destroy(); // Destroy existing validation rules*/
                   // initializeValidation(selectedValue);
                }
            });

            $('#large[name="IdentificationType"]').change(function () {
                var selectedValue = $(this).find("option:selected").text().trim();
                if (selectedValue.toLowerCase() == "passport + insurance card" || selectedValue.toLowerCase() == "パスポート + 保険証") {
                    $("#kycfront").hide();
                    $("#kycback").hide();
                    $("#Passport").show();
                    $("#Insurance").show();

                }
                else {
                    $("#kycfront").show();
                    $("#kycback").show();
                    $("#Passport").hide();
                    $("#Insurance").hide();
                }
            });



            //$('#large[name="holiday"]').change(function () {
            //    debugger;
            //    var maxHeight = 44; // Maximum height in pixels
            //   var currentheight= $('ul.select2-selection__rendered').outerHeight()
            //    if (currentheight > maxHeight) {
            //        $(this).css('height', 'auto');
            //    } else {
            //        $(this).css('height', maxHeight + 'px');
            //    }
            //});
            $('select').select2({
                minimumResultsForSearch: Infinity
            });

            $('#large[name="holiday"]').select2({
                multiple: true,
                width: '100%',
                placeholder: "@CRS.ADMIN.APPLICATION.Resources.Resource.Select"
            });
            $('#large[name="holiday"]').select2({
                multiple: true,
                width: '100%',
                placeholder: "@CRS.ADMIN.APPLICATION.Resources.Resource.Select"
            }).change(function () {
                var value = $('#large[name="holiday"]').val();

                if (value === null || value.length === 0) {
                    $('.select2-container--default .select2-search--inline .select2-search__field').css('display', 'block');
                } else {
                    $('.select2-container--default .select2-search--inline .select2-search__field').css('display', 'none');
                }

             });
            var value = $('#large[name="holiday"]').val();
            if (value === null || value.length === 0) {
                $('.select2-container--default .select2-search--inline .select2-search__field').css('display', 'block');
            } else {
                $('.select2-container--default .select2-search--inline .select2-search__field').css('display', 'none');
            }


            var PopUpRenderValue = '@ViewBag.PopUpRenderValue';
            if (PopUpRenderValue != null && PopUpRenderValue != "" && PopUpRenderValue == "Manage") {
                 var element = document.getElementById('add-new-host-club');
                 element.classList.remove('translate-x-full');
            }
            else if (PopUpRenderValue != null && PopUpRenderValue != "" && PopUpRenderValue == "ManageTag") {
                 var element = document.getElementById('add-new-host-tag');
                 element.classList.remove('translate-x-full');
            }
            else if (PopUpRenderValue != null && PopUpRenderValue != "" && PopUpRenderValue == "ManageManager") {
                var element = document.getElementById('add-new-host-manager');
                element.classList.remove('translate-x-full');
            }
            else if (PopUpRenderValue != null && PopUpRenderValue != "" && PopUpRenderValue == "ClubHoldDetails") {
                var element = document.getElementById('add-new-club-hold-details');
                element.classList.remove('translate-x-full');
            }
            var tag1Status = $('#Tag1Status').val();
            var tag2Status = $('#Tag2Status').val();
            var tag3Status = $('#Tag3Status').val();
            var tag4Status = $('#Tag4Status').val();
            var tag5Status = $('#Tag5Status').val();

            if (tag1Status != null && tag1Status != "" && tag1Status == "A") {
                var checkbox = document.getElementById("tag1");
                checkbox.checked = true;
                document.getElementById('tagInput').style.display = 'block';
            } else {
                var checkbox = document.getElementById("tag1");
                checkbox.checked = false;
                document.getElementById('tagInput').style.display = 'none';
            }
            if (tag2Status != null && tag2Status != "" && tag2Status == "A") {
                var checkbox = document.getElementById("tag2");
                checkbox.checked = true;
                document.getElementById('tagInput2').style.display = 'block';
            } else {
                var checkbox = document.getElementById("tag2");
                checkbox.checked = false;
                document.getElementById('tagInput2').style.display = 'none';
            }
            if (tag3Status != null && tag3Status != "" && tag3Status == "A") {
                var checkbox = document.getElementById("tag3");
                checkbox.checked = true;
                document.getElementById('tagInput3').style.display = 'block';
            } else {
                var checkbox = document.getElementById("tag3");
                checkbox.checked = false;
                document.getElementById('tagInput3').style.display = 'none';
            }
            if (tag4Status != null && tag4Status != "" && tag4Status == "A") {
                var checkbox = document.getElementById("tag4");
                checkbox.checked = true;
                document.getElementById('tagInput4').style.display = 'block';
                $('#Tag4Status').val("A");
            } else {
                var checkbox = document.getElementById("tag4");
                checkbox.checked = false;
                document.getElementById('tagInput4').style.display = 'none';
                $('#Tag4Status').val("B");
            }
            if (tag5Status != null && tag5Status != "" && tag5Status == "A") {
                var checkbox = document.getElementById("tag5");
                checkbox.checked = true;
                document.getElementById('tagInput5').style.display = 'block';
            } else {
                var checkbox = document.getElementById("tag5");
                checkbox.checked = false;
                document.getElementById('tagInput5').style.display = 'none';
            }
        });
        const steps = document.querySelectorAll('.profile-steps');
        const nextButton = document.getElementById('nextBtn');
        const saveData = document.getElementById('saveData');
        const previousButton = document.getElementById('previousBtn');
        const submitButton = document.getElementById('submit-button-id');
        const contentSections = document.querySelectorAll('.content-section');

        let currentStep = 0;
        const cancelButton = document.querySelector('.resetForm');

        cancelButton.addEventListener('click', () => {
            currentStep = 0; // Reset the step to 0
            updateStep(); // Update the UI to reflect the new step
        });

        const updateStep = () => {
            steps.forEach((step, index) => {
                if (index === currentStep) {
                    step.classList.add('active');
                    step.classList.remove('active-green');
                } else if (index < currentStep) {
                    step.classList.remove('active');
                    step.classList.add('active-green');
                } else {
                    step.classList.remove('active', 'active-green');
                }
            });

            contentSections.forEach((section, index) => {
                if (index === currentStep) {
                    section.style.display = 'block';
                } else {
                    section.style.display = 'none';
                }
            });

            if (currentStep === 0) {
                previousButton.style.display = 'none';
                previousButton.setAttribute('type', 'button');
            } else {
                previousButton.style.display = 'inline';
                previousButton.setAttribute('type', 'button');
            }

            if (currentStep === steps.length - 1) {
                nextButton.style.display = 'none';
                //saveData.style.display = 'block';
                nextButton.textContent = '@CRS.ADMIN.APPLICATION.Resources.Resource.Save_Changes';
                submitButton.style.display = 'block';
                nextButton.setAttribute('type', 'button');
            } else {
                nextButton.style.display = 'block';
                submitButton.style.display = 'none';
                nextButton.textContent = '@CRS.ADMIN.APPLICATION.Resources.Resource.Next';
                nextButton.setAttribute('type', 'button');

            }
        };
        var isvalid = true;

    //---------------------------------------START required validation according to next button-------------------------------------////
        nextButton.addEventListener('click', () => {
            var id = $('.content-section[style*="display: block"]').attr('id');


            if (id.toLowerCase() == "content1") {
                var isimagevalid = true;
                var logo = $("#file_name_logo").text().trim().toLowerCase(); //$("input[name='Logo_Certificate']").val();
                var CoverPhoto = $("#file_name_cover").text().trim().toLowerCase();  //$("input[name='CoverPhoto_Certificate']").val();
                var CorporateRegistryDocument = $("#file_name_corporateregistrydocument").text().trim().toLowerCase();  //$("input[name='CorporateRegistry_Certificate']").val();
                var KYCDocument = $("#file_name_kycdocument").text().trim().toLowerCase();   //$("input[name='KYCDocument_Certificate']").val();
                var PassportPhoto = $("#file_name_passportphoto").text().trim().toLowerCase();   //$("input[name='PassportPhotot_Certificate']").val();
                var KYCDocumentBack = $("#file_name_kycdocumentback").text().trim().toLowerCase();   //$("input[name='KYCDocumentBack_Certificate']").val();
                var Insurance = $("#file_name_insurancephoto").text().trim().toLowerCase();    //$("input[name='InsurancePhoto_Certificate']").val();
                var Business = $("#file_name_bussiness_certificate").text().trim().toLowerCase();    //$("input[name='Business_Certificate']").val();
                var identificationtype = $('#large[name="IdentificationType"]').find("option:selected").text().trim().toLowerCase();
                var businesstype = $('#large[name="BusinessTypeDDL"]').find("option:selected").text().trim().toLowerCase();

                if (logo == "no file choosen" || logo == "ファイルが選択されていません")
                {
                    $('span.field-validation-valid[data-valmsg-for="Logo"]').text('@CRS.ADMIN.APPLICATION.Resources.Resource.Required');
                    isimagevalid = false;
                }
                if (CoverPhoto == "no file choosen" || CoverPhoto == "ファイルが選択されていません")
                {
                    $('span.field-validation-valid[data-valmsg-for="CoverPhoto"]').text('@CRS.ADMIN.APPLICATION.Resources.Resource.Required');
                    isimagevalid = false;
                }
                if ((CorporateRegistryDocument == "no file choosen" || CorporateRegistryDocument == "ファイルが選択されていません") && (businesstype == "corporation" || businesstype == "法人"))
                {
                    $('span.field-validation-valid[data-valmsg-for="CorporateRegistryDocument"]').text('@CRS.ADMIN.APPLICATION.Resources.Resource.Required');
                    isimagevalid = false;
                }
                if (KYCDocument == "no file choosen" || KYCDocument == "ファイルが選択されていません")
                {
                      if (identificationtype != "passport + insurance card")
                       {
                          if (identificationtype != "パスポート + 保険証")
                          {
                              $('span.field-validation-valid[data-valmsg-for="KYCDocument"]').text('@CRS.ADMIN.APPLICATION.Resources.Resource.Required');
                              isimagevalid = false;
                          }

                       }
                       else if (identificationtype != "パスポート + 保険証")
                       {
                           if (identificationtype != "passport + insurance card") {
                               $('span.field-validation-valid[data-valmsg-for="KYCDocument"]').text('@CRS.ADMIN.APPLICATION.Resources.Resource.Required');
                               isimagevalid = false;
                           }

                       }
                }
                if ((PassportPhoto == "no file choosen" || PassportPhoto == "ファイルが選択されていません") && (identificationtype == "passport + insurance card" || identificationtype == "パスポート + 保険証"))
                {
                    $('span.field-validation-valid[data-valmsg-for="PassportPhoto"]').text('@CRS.ADMIN.APPLICATION.Resources.Resource.Required');
                    isimagevalid = false;
                }
                if (KYCDocumentBack == "no file choosen" || KYCDocumentBack == "ファイルが選択されていません")
                {
                    if (identificationtype != "passport + insurance card")
                    {
                       if (identificationtype != "パスポート + 保険証")
                       {
                           $('span.field-validation-valid[data-valmsg-for="KYCDocumentBack"]').text('@CRS.ADMIN.APPLICATION.Resources.Resource.Required');
                           isimagevalid = false;
                       }

                    }
                    else if (identificationtype != "パスポート + 保険証")
                    {
                        if (identificationtype != "passport + insurance card") {
                            $('span.field-validation-valid[data-valmsg-for="KYCDocumentBack"]').text('@CRS.ADMIN.APPLICATION.Resources.Resource.Required');
                            isimagevalid = false;
                        }

                    }


                }
                if ((Insurance == "no file choosen" || Insurance == "ファイルが選択されていません") && (identificationtype == "passport + insurance card" || identificationtype == "パスポート + 保険証"))
                {
                    $('span.field-validation-valid[data-valmsg-for="InsurancePhoto"]').text('@CRS.ADMIN.APPLICATION.Resources.Resource.Required');
                    isimagevalid = false;
                }
                if (Business == "no file choosen" || Business == "ファイルが選択されていません") {
                    $('span.field-validation-valid[data-valmsg-for="BusinessCertificate"]').text('@CRS.ADMIN.APPLICATION.Resources.Resource.Required');
                    isimagevalid = false;
                }

            }

            else if (id.toLowerCase() == "content3")
            {

                var locationDDL = $('#large[name="LocationDDL"]').val();
                if (locationDDL == "")
                {
                    $('span.field-validation-valid[data-valmsg-for="LocationDDL"]').text('@CRS.ADMIN.APPLICATION.Resources.Resource.Required');
                    isimagevalid = false;
                }
                commaSeparatedString = [];
                var items = [];
                $('#large[name="holiday"] option:selected').each(function () {
                    items.push($(this).val());
                });
                commaSeparatedString = items.join(', ');
                $('input[name="HolidayStr"]').val(commaSeparatedString);
            }



            var isValid = $('#ManageClubForm').valid();
            if (!isValid) {
                return false;
            }
            if (isimagevalid == false) {
                return false;
            }
            if (currentStep < steps.length - 1) {
                currentStep++;
                updateStep();
            }
        });

        previousButton.addEventListener('click', () => {
            if (currentStep > 0) {
                currentStep--;
                updateStep();
            }
        });

        // Initial state setup
        updateStep();


        $('#file_input_logo').on('change', function () {
            var logo = $("#file_name_logo").text().trim().toLowerCase();
            if (logo != "") {
                $('span.field-validation-valid[data-valmsg-for="Logo"]').text('');
            }
        });
        $('#file_input_cover').on('change', function () {
            var CoverPhoto = $("#file_name_cover").text().trim().toLowerCase();
            if (CoverPhoto != "") {
                $('span.field-validation-valid[data-valmsg-for="CoverPhoto"]').text('');
            }
        });
        $('#file_input_corporateregistrydocument').on('change', function () {
            var CorporateRegistryDocument = $("#file_name_corporateregistrydocument").text().trim().toLowerCase();
            if (CorporateRegistryDocument != "") {
                $('span.field-validation-valid[data-valmsg-for="CorporateRegistryDocument"]').text('');
            }
        });
        $('#file_input_kycdocument').on('change', function () {
            var KYCDocument = $("#file_name_kycdocument").text().trim().toLowerCase();
            if (KYCDocument != "") {
                $('span.field-validation-valid[data-valmsg-for="KYCDocument"]').text('');
            }
        });
        $('#file_input_passportphoto').on('change', function () {
            var PassportPhoto = $("#file_name_passportphoto").text().trim().toLowerCase();
            if (PassportPhoto != "") {
                $('span.field-validation-valid[data-valmsg-for="PassportPhoto"]').text('');
            }
        });
        $('#file_input_kycdocumentback').on('change', function () {
            var KYCDocumentBack = $("#file_name_kycdocumentback").text().trim().toLowerCase();
            if (KYCDocumentBack != "") {
                $('span.field-validation-valid[data-valmsg-for="KYCDocumentBack"]').text('');
            }
        });
        $('#file_input_insurancephoto').on('change', function () {
            var Insurance = $("#file_name_insurancephoto").text().trim().toLowerCase();
            if (Insurance != "") {
                $('span.field-validation-valid[data-valmsg-for="InsurancePhoto"]').text('');
            }
        });
        $('#file_input_business_certificate').on('change', function () {
            var Business = $("#file_name_bussiness_certificate").text().trim().toLowerCase();
            if (Business != "") {
                $('span.field-validation-valid[data-valmsg-for="BusinessCertificate"]').text('');
            }
        });
        $('#large[name="LocationDDL"]').on('change', function () {
            var locationDDL = $('#large[name="LocationDDL"]').val();
            if (locationDDL != "")
            {
                $('span.field-validation-valid[data-valmsg-for="LocationDDL"]').text('');
                isimagevalid = false;
            }
        });
        $(document).ready(function () {

            var validator = $('#ManageClubForm').validate({
                errorClass: 'invalid',
                errorElement: 'div',
                errorPlacement: function (error, element) {
                    error.insertAfter(element);
                },
                rules: {
                    ClubName1: {
                        required: true
                    },
                    ClubName2: {
                        required: true
                    },
                    ClubName: {
                        required: true
                    },
                    ceoFullName: {
                        required: true
                    },
                    CeoFurigana: {
                        required: true
                    },
                    CompanyName: {
                        required: true
                    },
                    MobileNumber: {
                        required: true
                    },
                    Email: {
                        required: true
                    },
                    Representative1_ContactName: {
                        required: $('#large[name="BusinessTypeDDL"]').find("option:selected").text().trim().toLowerCase() == "corporation"  ||
                                  $('#large[name="BusinessTypeDDL"]').find("option:selected").text().trim().toLowerCase() === "法人"

                    },
                    Representative1_MobileNo: {
                        required: $('#large[name="BusinessTypeDDL"]').find("option:selected").text().trim().toLowerCase() == "corporation" ||
                                  $('#large[name="BusinessTypeDDL"]').find("option:selected").text().trim().toLowerCase() === "法人"
                    },
                    Representative1_Email: {
                        required: $('#large[name="BusinessTypeDDL"]').find("option:selected").text().trim().toLowerCase() == "corporation" ||
                                  $('#large[name="BusinessTypeDDL"]').find("option:selected").text().trim().toLowerCase() === "法人"
                    },
                    Representative1_Furigana: {
                        required: $('#large[name="BusinessTypeDDL"]').find("option:selected").text().trim().toLowerCase() == "corporation" ||
                                  $('#large[name="BusinessTypeDDL"]').find("option:selected").text().trim().toLowerCase() === "法人"
                    },
                    GoogleMap: {
                        required: true
                    },
                    PostalCode: {
                        required: true
                    },
                    LocationDDL: {
                        required: true
                    },
                    City: {
                        required: true
                    },
                    Street: {
                        required: true
                    },
                    //BuildingRoomNo: {
                    //    required: true
                    //},
                    WorkingHrFrom: {
                        required: true
                    },
                    WorkingHrTo: {
                        required: true
                    },
                    LastOrderTime: {
                        required: true
                    },
                    LastEntryTime: {
                        required: true
                    },
                },
                messages: {
                    ClubName1: {
                        required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
,                    },
                    ClubName2: {
                       required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                    },
                    ClubName: {
                        required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                    },
                    ceoFullName: {
                        required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                    },
                    CeoFurigana : {
                        required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                    },
                    CompanyName : {
                        required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                    },
                    MobileNumber : {
                        required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                    },
                    Email: {
                        required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                    },
                    Representative1_ContactName: {
                        required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                    },
                    Representative1_MobileNo : {
                        required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                    },
                    Representative1_Email : {
                        required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                    },
                    Representative1_Furigana: {
                        required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                    },
                    GoogleMap: {
                        required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                    },
                    PostalCode: {
                        required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                    },
                    LocationDDL: {
                        required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                   },
                    City: {
                       required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                   },
                   Street: {
                        required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                   },
                   @*BuildingRoomNo: {
                        required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                    },*@
                    WorkingHrFrom: {
                       required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                    },
                    WorkingHrTo: {
                     required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                    },
                    LastOrderTime: {
                    required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                    },
                    LastEntryTime: {
                       required: '@CRS.ADMIN.APPLICATION.Resources.Resource.Required'
                    },
                }
            });






        });

        //---------------------------------------END required validation according to next button-------------------------------------////
    </script>
    <script>


        function LangChangeAlert(message, buttonText, agentId) {
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": false,
                "progressBar": false,
                "positionClass": "toast-top-right",
                "preventDuplicates": true,
                "showDuration": "300",
                "hideDuration": "0",
                "timeOut": 0,
                "extendedTimeOut": 0,
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut",
                "tapToDismiss": false
            };

            let buttonHtml;
            buttonHtml = `
            <button style="display: block; margin-top: 10px; background-color: #007bff; color: #fff; border: none; padding: 5px 10px; cursor: pointer;"
                    onclick="handleLanguageSelection('${agentId}')">
                ${buttonText}
            </button>`;

            const fullMessage = `${message} ${buttonHtml}`;

            toastr.info(fullMessage);
        }




        function handleLanguageSelection(agentId) {
            BlockUnblockFunction(agentId);
        }

        function BlockUnblockFunction(i) {
            var RequestVerificationToken = $('input[name="__RequestVerificationToken"]').val();
            $.ajax({
                 type: "POST",
                 url: '@Url.Action("BlockClub", "ClubManagement")',
                 data: {
                     '__RequestVerificationToken': RequestVerificationToken, 'AgentId': i},
                success: function (response) {
                    window.location.reload();
                 },
                error: function (error) {
                    window.location.reload();
                 }
             })
        }
        function ManageClubSubmitFunction() {
            document.getElementById("ManageClubForm").submit();
        }

        function ManageClubGetDetailsFunction(i) {
            let search_filter = $('#default-search').val();
            const start_index_val = @ViewBag.StartIndex;
            const page_size = @ViewBag.PageSize;
            window.location.href = '/ClubManagement/ManageClub?AgentId=' + i + '&SearchFilter=' + search_filter + '&StartIndex=' + start_index_val + '&PageSize=' + page_size;;
        }

        function ManageClubManagerFunction(i) {
            let search_filter = $('#default-search').val();
            const start_index_val = @ViewBag.StartIndex;
            const page_size = @ViewBag.PageSize;
            window.location.href = '/ClubManagement/ManageManager?AgentId=' + i + '&SearchFilter=' + search_filter + '&StartIndex=' + start_index_val + '&PageSize=' + page_size;
        }

        function CancelFunction() {
            location.reload();
        }

        function HostRedirectFunction(i) {
            window.location.href = '/HostManagement/HostList?AgentId=' + i;
        }

        function ClubGalleryRedirectFunction(i) {
            window.location.href = '/ClubManagement/GalleryManagement?ClubId=' + i;
        }

        function ManageClubTagFunction(i) {
             let search_filter = $('#default-search').val();
             const start_index_val = @ViewBag.StartIndex;
             const page_size = @ViewBag.PageSize;
            window.location.href = '/ClubManagement/ManageTag?ClubId=' + i + '&SearchFilter=' + search_filter + '&StartIndex=' + start_index_val + '&PageSize=' + page_size;
        }
        function ApproveClubManagerFunction() {
          const i = $('#approve_id').attr('data-val1');
          const j = $('#approve_id').attr('data-val2');
          const k = $('#approve_id').attr('data-val3');
          let search_filter2 = $('#default-search-pending').val();
          const start_index_val2 = @ViewBag.StartIndex2;
          const page_size2 = @ViewBag.PageSize2;
          window.location.href = '/ClubManagement/ApproveRejectClub?holdid=' + i + '&type=' + j + '&AgentId=' + k+ '&SearchFilter=' + search_filter2 + '&StartIndex=' + start_index_val2 + '&PageSize=' + page_size2;
        }
        function RejectClubManagerFunction() {
          const i = $('#reject_id').attr('data-val1');
          const j = $('#reject_id').attr('data-val2');
          const k = $('#reject_id').attr('data-val3');
          let search_filter2 = $('#default-search-pending').val();
          const start_index_val2 = @ViewBag.StartIndex2;
          const page_size2 = @ViewBag.PageSize2;
          window.location.href = '/ClubManagement/ApproveRejectClub?holdid=' + i + '&type=' + j + '&AgentId=' + k + '&SearchFilter=' + search_filter2 + '&StartIndex=' + start_index_val2 + '&PageSize=' + page_size2;
        }
        function EditPendingClub(i, j) {
            let search_filter2 = $('#default-search-pending').val();
            const start_index_val2 = @ViewBag.StartIndex2;
            const page_size2 = @ViewBag.PageSize2;
            window.location.href = '/ClubManagement/ManagePendingClub?AgentId=' + j + '&holdId=' + i + '&SearchFilter=' + search_filter2 + '&StartIndex=' + start_index_val2 + '&PageSize=' + page_size2;;
        }
        function EditClubHoldDetail(i) {
             let search_filter2 = $('#default-search-pending').val();
             const start_index_val2 = @ViewBag.StartIndex2;
             const page_size2 = @ViewBag.PageSize2;
            window.location.href = '/ClubManagement/ClubHoldDetails?Holdid=' + i + '&SearchFilter=' + search_filter2 + '&StartIndex=' + start_index_val2 + '&PageSize=' + page_size2;
            //window.location.href = '/ClubManagement/ClubHoldDetails?Holdid=' + i;
        }
        function addQueryParam2(url, paramName, paramValue, paramName2, paramValue2) {
            // Add the first query parameter
            if (paramValue != null && paramValue != "") {
                // Check if it's the first parameter, if so, use "?" else use "&"
                url += url.includes('?') ? `&${paramName}=${paramValue}` : `?${paramName}=${paramValue}`;
            }

            // Add the second query parameter
            if (paramValue2 != null && paramValue2 != "") {
                url += url.includes('?') ? `&${paramName2}=${paramValue2}` : `?${paramName2}=${paramValue2}`;
            }

            return url;
        }
        function PlanRedirectFunction(i) {
            window.location.href = '/ClubPlanManagement/ClubPlanList?AgentId=' + i;
        }

    </script>


    <script>
        var optionCount = $('select[name="PlanDetailList[0].PlanIdentityList[0].IdentityDescription"] option').length;
        var plansDiv = document.querySelectorAll('#container .plans');
        $('.default_select').select2({

        });
        var plansDivsCounts = plansDiv.length;
        if (plansDivsCounts>optionCount) {
            document.getElementById("addrow").disabled = true;
        }
        function DisableDropdownoption() {
            plansDiv.forEach(function (planDiv, index) {
                // Get all select elements within the current row
                var selects = planDiv.querySelectorAll('select');
                selects.forEach(function (select, selectIndex) {
                    // Construct unique ID for each select element
                    var selectId = 'select_' + index + '_' + selectIndex;
                    select.id = selectId;

                    // Get the selected value of the current select element
                    var selectedValue = select.value;

                    // Iterate over all rows again to find the selected value in other rows
                    plansDiv.forEach(function (otherPlanDiv, otherIndex) {
                        // Exclude the current row
                        if (otherIndex !== index) {
                            // Find select elements in other rows
                            var otherSelects = otherPlanDiv.querySelectorAll('select');

                            otherSelects.forEach(function (otherSelect) {
                                // If the selected value matches, disable the option
                                if (otherSelect.value === selectedValue) {
                                    // Disable the option
                                    otherSelect.disabled = true;
                                } else {
                                    // Enable the option
                                    otherSelect.disabled = false;
                                }
                            });
                        }
                    });
                });
            });
 }


        function getRowValues() {
            var rowsData = [];
            var plansDivs = document.querySelectorAll('#container .plans');
            var sv = "";
            var name=""
            plansDivs.forEach(function (plansDiv) {
                var staticDataInputs = plansDiv.querySelectorAll('.StaticDataValue');
                var nameInputs = plansDiv.querySelectorAll('.name');
                var descriptionInputs = plansDiv.querySelectorAll('.w-full');

                var rowData = [];

                for (var i = 0; i < staticDataInputs.length; i++) {
                    var staticDataValue = staticDataInputs[i].value;
                    var nameValue = nameInputs[i].value;
                    var descriptionValue = descriptionInputs[i].value;

                    rowData.push({
                        StaticDataValue: staticDataValue,
                        name: nameValue,
                        IdentityDescription: descriptionValue
                    });
                }

                rowsData.push(rowData);
            });
            var jsonData = JSON.stringify(rowsData);
            $("#data").val(jsonData)
            $('#ManageClubForm').submit();

        }

        var selectedOptions = {};
        var isdocready = false;
        var firstrow = false;


        //////////////----------------------START Used fro multiple rows of plan to add ----------------------------------------///



        @*function repeatContent() {
            if (plansDivsCounts < optionCount) {
                var originalContent = document.getElementById('container');
                var plansDivs = document.querySelectorAll('#container .plans');
                var plansDivsCount = plansDivs.length;
                var rowcouunt = parseInt(plansDivsCount)
                var html = "";
                for (var i = 0; i < @Model.ManageClubModel.PlanDetailList[0].PlanIdentityList.Count; i++) {
                    ids = rowcouunt + "_large";
                    var PlanList = @Html.Raw(Json.Encode(Model.ManageClubModel.PlanDetailList[0]));
                    var id = rowcouunt + "_PlanList_IdentityDescription_" + i;
                    if (PlanList.PlanIdentityList[i].inputtype.toLowerCase() === "dropdown") {
                        html += "<div class='input-field-common'>";
                        html += "<label class='block mb-[12px] text-sm font-medium text-secondary-text-2'>";
                        html += PlanList.PlanIdentityList[i].IdentityLabel;
                        html += "</label>";
                        html += "<input type='hidden'  name='PlanDetailList[" + rowcouunt + "].PlanIdentityList[" + i + "].StaticDataValue' value='" + PlanList.PlanIdentityList[i].StaticDataValue + "' class='StaticDataValue' />";
                        html += "<input type='hidden' name='PlanDetailList[" + rowcouunt + "].PlanIdentityList[" + i + "].name' value='" + PlanList.PlanIdentityList[i].name + "' class='name' />";
                        html += "<input type='hidden'  name='PlanDetailList[" + rowcouunt + "].PlanIdentityList[" + i + "].inputtype' value='" + PlanList.PlanIdentityList[i].inputtype + "' class='inputtype' />";
                        html += "<input type='hidden'  name='PlanDetailList[" + rowcouunt + "].PlanIdentityList[" + i + "].IdentityLabel' value='" + PlanList.PlanIdentityList[i].IdentityLabel + "' class='IdentityLabel' />";
                        html += "<select id='" + ids + "' name='PlanDetailList[" + rowcouunt + "].PlanIdentityList[" + i + "].IdentityDescription' class='default_select select-common block w-full' style='width: 100%;'>";
                         @foreach (KeyValuePair<string, string> item in ViewBag.PlansList as Dictionary<string, string>)
                       {
                        <text>
                          html += "<option value='@item.Key'>@item.Value</option>";
                        </text>

                        }
                        // Add options here...
                        html += "</select>";
                        html += "</div>";
                    } else if (PlanList.PlanIdentityList[i].inputtype.toLowerCase() === "textbox") {
                        html += "<div class='input-field-common'>";
                        html += "<label class='block mb-[12px] text-sm font-medium text-secondary-text-2'>";
                        html += PlanList.PlanIdentityList[i].IdentityLabel;
                        html += "</label>";
                        html += "<input type='hidden' name='PlanDetailList[" + rowcouunt + "].PlanIdentityList[" + i + "].StaticDataValue' value='" + PlanList.PlanIdentityList[i].StaticDataValue + "' class='StaticDataValue' />";
                        html += "<input type='hidden' name='PlanDetailList[" + rowcouunt + "].PlanIdentityList[" + i + "].name' value='" + PlanList.PlanIdentityList[i].name + "' class='name' />";
                        html += "<input type='hidden'  name='PlanDetailList[" + rowcouunt + "].PlanIdentityList[" + i + "].inputtype' value='" + PlanList.PlanIdentityList[i].inputtype + "' class='inputtype' />";
                        html += "<input type='hidden'  name='PlanDetailList[" + rowcouunt + "].PlanIdentityList[" + i + "].IdentityLabel' value='" + PlanList.PlanIdentityList[i].IdentityLabel + "' class='IdentityLabel' />";
                        html += "<input type='text' name='PlanDetailList[" + rowcouunt + "].PlanIdentityList[" + i + "].IdentityDescription' class='w-full' autocomplete='off' maxlength='100' />";
                        if (PlanList.PlanIdentityList[i].IdentityDescription != null) {

                               html += "<span class='error'>" + PlanList.PlanIdentityList[i].IdentityDescription + "</span>";

                        }

                       // html += "<span class='error'>" + PlanList.PlanIdentityList[i].IdentityDescription + "</span>";
                        html += "</div>";
                    } else if (PlanList.PlanIdentityList[i].inputtype.toLowerCase() === "time") {
                        html += "<div class='input-field-common'>";
                        html += "<label for='time' class='block mb-[12px] text-sm font-medium text-secondary-100'>";
                        html += PlanList.PlanIdentityList[i].IdentityLabel;
                        html += "</label>";
                        html += "<input type='hidden' name='PlanDetailList[" + rowcouunt + "].PlanIdentityList[" + i + "].StaticDataValue' value='" + PlanList.PlanIdentityList[i].StaticDataValue + "' class='StaticDataValue' />";
                        html += "<input type='hidden' name='PlanDetailList[" + rowcouunt + "].PlanIdentityList[" + i + "].name' value='" + PlanList.PlanIdentityList[i].name + "' class='name' />";
                        html += "<input type='hidden'  name='PlanDetailList[" + rowcouunt + "].PlanIdentityList[" + i + "].inputtype' value='" + PlanList.PlanIdentityList[i].inputtype + "' class='inputtype' />";
                        html += "<input type='hidden'  name='PlanDetailList[" + rowcouunt + "].PlanIdentityList[" + i + "].IdentityLabel' value='" + PlanList.PlanIdentityList[i].IdentityLabel + "' class='IdentityLabel' />";
                        html += "<input type='time' name='PlanDetailList[" + rowcouunt + "].PlanIdentityList[" + i + "].IdentityDescription' class='w-full' placeholder='HH:MM' autocomplete='off' maxlength='30' />";
                        if (PlanList.PlanIdentityList[i].IdentityDescription != null) {

                            html += "<span class='error'>" + PlanList.PlanIdentityList[i].IdentityDescription + "</span>";

                        }
                        // html += "<span class='error'>" + PlanList.PlanIdentityList[i].IdentityDescription + "</span>";
                        html += "</div>";
                    }
                }
                var htmlToInsert =

                    '<style>'+
                    '.select2-container--default .select2-selection--single {'+
                        'height: 44px !important;'+
                 '}' +
                 '.input-field-common .error {'+
                    'color: var(--error);'+
                    'font-size: 12px;'+
                    'font-style: normal;'+
                    'font-weight: 500;'+
                    'margin-top: 8px;'+
                '}' +
                '</style>'+
                    '<!-- for plan last order and last entry  -->' +
                    ' <div class="plans">' +
                    '<div class="grid grid-cols-3 gap-x-4 gap-y-5">' +
                    html +
                    '</div>' +
                    '</div>' +
                    '<br />';

                originalContent.insertAdjacentHTML('beforeend', htmlToInsert);
                var id = rowcouunt + "_large";
                var selector = '#' + id;
                $(selector).select2();
                $(".error").text("");

                if (optionCount == parseInt( rowcouunt + 1)) {
                    document.getElementById("addrow").disabled = true;
                }
            }
            else {
                document.getElementById("addrow").disabled = false;
            }
        }*@




 //////////////----------------------END Used fro multiple rows of plan to add ----------------------------------------///


  //// Get the dropdown element
  //var dropdown = document.getElementById("myDropdown");

  //// Approach 1: Using event listeners
  //dropdown.addEventListener("change", function() {
  //  // Example condition: Disable option 3 if option 2 is selected
  //  if (dropdown.value === "option2") {
  //    dropdown.querySelector('option[value="option3"]').disabled = true;
  //  } else {
  //    dropdown.querySelector('option[value="option3"]').disabled = false;
  //  }
  //});

  //// Approach 2: Direct manipulation
  //// Example: Disable option 2 after a certain event occurs
  //function disableOption2() {
  //  dropdown.querySelector('option[value="option2"]').disabled = true;
  //}

  //// Call disableOption2 function to disable option 2
  //disableOption2();


    </script>

    <script>
        function changeTab(selectedTabId) {
            var tabPanes = document.querySelectorAll(".tab-pane");
            tabPanes.forEach(function (tab) {

                if (tab.id === selectedTabId) {
                    tab.style.display = "block";
                } else {
                    tab.style.display = "none";
                }
            });
        }
     document.addEventListener('DOMContentLoaded', function () {
         if ($("#ListType").val().toLowerCase() == "02") {
             changeTab('pending', 'tab2Link')
             const page_size2 = @ViewBag.PageSize2;
             const total_data2 = @ViewBag.TotalData2;
             const start_index_val2 = @ViewBag.StartIndex2;
             $("#default-search").val("");
             $("#default-search-reject").val("");
             let URL2 = "/ClubManagement/ClubList";
             let search_filter2 = $('#default-search-pending').val();
             URL2 = addQueryParam2(URL2, 'SearchFilter', search_filter2, 'TabValue', '02');
             dynamicStartIndexLabel = "StartIndex2";
             dynamicPageSizeLabel = "PageSize2";
             LoadPagination(page_size2, total_data2, start_index_val2, URL2, 'pagination-id-2', 'prev-btn-2', 'next-btn-2', 'ShowEntries-Id-2', 'Entries-Id-2');

         }
         else if ($("#ListType").val().toLowerCase() == "03") {
             changeTab('rejected', 'tab3Link')
             const page_size3 = @ViewBag.PageSize3;
             const total_data3 = @ViewBag.TotalData3;
             const start_index_val3 = @ViewBag.StartIndex3;
             $("#default-search").val("");
             $("#default-search-pending").val("");
             let URL3 = "/ClubManagement/ClubList";
             let search_filter3 = $('#default-search-reject').val();
             URL3 = addQueryParam2(URL3, 'SearchFilter', search_filter3, 'TabValue', '03');
             dynamicStartIndexLabel = "StartIndex3";
             dynamicPageSizeLabel = "PageSize3";
             LoadPagination(page_size3, total_data3, start_index_val3, URL3, 'pagination-id-3', 'prev-btn-3', 'next-btn-3', 'ShowEntries-Id-3', 'Entries-Id-3');

         }
         else
         {
          changeTab('all', 'tab1Link')
          $("#default-search-reject").val("");
          $("#default-search-pending").val("");
          const page_size = @ViewBag.PageSize;
          const total_data = @ViewBag.TotalData;
          const start_index_val = @ViewBag.StartIndex;
          let URL = "/ClubManagement/ClubList";
          let search_filter = $('#default-search').val();
          URL = addQueryParam(URL, 'SearchFilter', search_filter);
          dynamicStartIndexLabel = "StartIndex";
          dynamicPageSizeLabel = "PageSize";
          LoadPagination(page_size, total_data, start_index_val, URL);
         }


        $("#LicenseIssuedDate").val("@_ManageClubModel.LicenseIssuedDate");
         jQuery(function ($) {
             $.datepicker.regional['ja'] = {
                 closeText: '閉じる',
                 prevText: '&#x3c;前',
                 nextText: '次&#x3e;',
                 currentText: '今日',
                 monthNames: ['1月', '2月', '3月', '4月', '5月', '6月',
                     '7月', '8月', '9月', '10月', '11月', '12月'],
                 monthNamesShort: ['1月', '2月', '3月', '4月', '5月', '6月',
                     '7月', '8月', '9月', '10月', '11月', '12月'],
                 dayNames: ['日曜日', '月曜日', '火曜日', '水曜日', '木曜日', '金曜日', '土曜日'],
                 dayNamesShort: ['日', '月', '火', '水', '木', '金', '土'],
                 dayNamesMin: ['日', '月', '火', '水', '木', '金', '土'],
                 weekHeader: '週',
                 dateFormat: 'yy/mm/dd',
                 firstDay: 0,
                 isRTL: false,
                 showMonthAfterYear: true,
                 yearSuffix: '年'
             };
             $.datepicker.setDefaults($.datepicker.regional['ja']);
             $("#LicenseIssuedDate").datepicker({
                 /*minDate: new Date(),*/
                 maxDate: new Date(),
                 defaultDate: '@_ManageClubModel.LicenseIssuedDate'
             });
         })


     });

     function changeTabV1(selectedTabId, selectedLinkId)
     {
         let URL;
         if (selectedLinkId === 'tab2Link') {
            const page_size2 = @ViewBag.PageSize2;
            const total_data2 = @ViewBag.TotalData2;
            const start_index_val2 = @ViewBag.StartIndex2;
            let URL2 = "/ClubManagement/ClubList";
            let search_filter2 = $('#default-search-pending').val();
            URL = addQueryParam2(URL2, 'TabValue', '02', 'SearchFilter', search_filter2 );
            window.location.href = URL
         }
         else if (selectedLinkId === 'tab3Link') {
            const page_size3 = @ViewBag.PageSize3;
            const total_data3 = @ViewBag.TotalData3;
            const start_index_val3 = @ViewBag.StartIndex3;
            let URL3 = "/ClubManagement/ClubList";
            let search_filter3 = $('#default-search-reject').val();
            URL = addQueryParam2(URL3, 'TabValue', '03', 'SearchFilter', search_filter3 );
            window.location.href = URL
         }
         else
         {
            const page_size = @ViewBag.PageSize;
            const total_data = @ViewBag.TotalData;
            const start_index_val = @ViewBag.StartIndex;
            let URL1 = "/ClubManagement/ClubList";
            let search_filter1 = $('#default-search').val();
            URL = addQueryParam2(URL1, 'TabValue', '', 'SearchFilter', search_filter1 );
            window.location.href = URL
         }

     }
     @* tab for all, pending, rejected *@
      document.getElementById('tab1Link').style.color = '#D75A8B';
      document.getElementById('tab1Link').style.borderBottom = '#D75A8B 2px solid';

      function changeTab(selectedTabId, selectedLinkId) {
          var tabLinks = document.querySelectorAll('.styleCss');
          var tabContents = document.querySelectorAll('.pane');
          // Toggle active class for tab links
          tabLinks.forEach(function (link) {
              if (link.id === selectedLinkId) {
                  link.classList.add('active');
              } else {
                  link.classList.remove('active');
              }
          });

          // Toggle display for tab contents
          tabContents.forEach(function (content) {
              if (content.id === selectedTabId) {
                  content.style.display = 'block';
              } else {
                  content.style.display = 'none';
              }
          });
          // Change color for tab links
          if (selectedLinkId === 'tab1Link')
          {
              document.getElementById('tab1Link').style.color = '#D75A8B';
              document.getElementById('tab1Link').style.borderBottom = '#D75A8B 2px solid';
              document.getElementById('tab2Link').style.borderBottom = '';
              document.getElementById('tab2Link').style.color = '';
              document.getElementById('tab3Link').style.borderBottom = '';
              document.getElementById('tab3Link').style.color = '';
              const page_size = @ViewBag.PageSize;
              const total_data = @ViewBag.TotalData;
              const start_index_val = @ViewBag.StartIndex;
              let URL = "/ClubManagement/ClubList";
              let search_filter = $('#default-search').val();
              URL = addQueryParam(URL, 'SearchFilter', search_filter);
              dynamicStartIndexLabel = "StartIndex";
              dynamicPageSizeLabel = "PageSize";
              LoadPagination(page_size, total_data, start_index_val, URL);
          }
          else if (selectedLinkId === 'tab2Link')
          {
              document.getElementById('tab3Link').style.borderBottom = '';
              document.getElementById('tab3Link').style.color = '';
              document.getElementById('tab1Link').style = ''; // Reset color for other link
              document.getElementById('tab1Link').style.borderBottom = '';
              document.getElementById('tab2Link').style.color = '#D75A8B';
              document.getElementById('tab2Link').style.borderBottom = '#D75A8B 2px solid';
              $("#valueTypeid").val("02");
              const page_size2 = @ViewBag.PageSize2;
              const total_data2 = @ViewBag.TotalData2;
              const start_index_val2 = @ViewBag.StartIndex2;
              let URL2 = "/ClubManagement/ClubList";
              let search_filter2 = $('#default-search-pending').val();
              URL2 = addQueryParam2(URL2, 'SearchFilter', search_filter2, 'TabValue', '02');
              dynamicStartIndexLabel = "StartIndex2";
              dynamicPageSizeLabel = "PageSize2";
              LoadPagination(page_size2, total_data2, start_index_val2, URL2, 'pagination-id-2', 'prev-btn-2', 'next-btn-2', 'ShowEntries-Id-2', 'Entries-Id-2');
          }
          else
          {
              document.getElementById('tab1Link').style.borderBottom = '';
              document.getElementById('tab2Link').style.borderBottom = '';
              document.getElementById('tab2Link').style.color = '';
              document.getElementById('tab1Link').style.color = ''; // Reset color for other link
              document.getElementById('tab3Link').style.color = '#D75A8B';
              document.getElementById('tab3Link').style.borderBottom = '#D75A8B 2px solid';
              $("#valueTypeidreject").val("03");
              const page_size3 = @ViewBag.PageSize3;
              const total_data3 = @ViewBag.TotalData3;
              const start_index_val3 = @ViewBag.StartIndex3;
              let URL3 = "/ClubManagement/ClubList";
              let search_filter3 = $('#default-search-reject').val();
              URL3 = addQueryParam2(URL3, 'SearchFilter', search_filter3, 'TabValue', '03');
              dynamicStartIndexLabel = "StartIndex3";
              dynamicPageSizeLabel = "PageSize3";
              LoadPagination(page_size3, total_data3, start_index_val3, URL3, 'pagination-id-3', 'prev-btn-3', 'next-btn-3', 'ShowEntries-Id-3', 'Entries-Id-3');
          }
      }

    </script>



    <script>
        const checkboxclub = document.getElementById('toogle1');
        // const tagInput = document.getElementById('tagInput');

        //if (checkbox.checked) {
        //    tagInput.style.display = 'block';
        //}

        checkboxclub.addEventListener('change', function () {
            var nameAttributeValue = $('#toogle1').attr('name');
            if (this.checked) {
                $('input[name="' + nameAttributeValue + '"]').val('A');
            } else {
                //tagInput.style.display = 'none';
                $('input[name="' + nameAttributeValue + '"]').val('B');
            }
        });
    </script>
}