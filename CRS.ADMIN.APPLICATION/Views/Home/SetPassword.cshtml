@model CRS.ADMIN.APPLICATION.Models.CreatePassword
@{
    ViewBag.Title = "SetPassword";
    Layout = "";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="robots" content="noindex, nofollow">
    <meta name="googlebot" content="noindex, nofollow">
    <title>CRS | Set Password</title>

    <!-- Google Font: Source Sans Pro -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
    @Styles.Render("~/UI/LoginStyle")
    <style>
        .login-page {
            height: 90vh;
        }

        .login-box {
            width: 400px;
        }

        .input-group-prepend .eye {
            display: flex;
            position: absolute;
            right: 0px;
            top: 35px;
            -webkit-box-align: center;
            align-items: center;
            margin-bottom: 0;
            font-size: 1rem;
            font-weight: 400;
            line-height: 1.5;
            color: #495057;
            white-space: nowrap;
            border-radius: .25rem;
            padding: 10px 15px;
            text-align: center;
        }

        .error-signup {
            display: block;
            background: #c1ecfc;
            text-align: left;
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 10pt !important;
            margin-bottom: 5px;
            text-align: center;
        }

        form i {
            margin-left: -30px;
            cursor: pointer;
        }

        .in {
            color: #48dd61
        }

        .out {
            color: #F15656
        }

        .field-validation-error {
            color: #dc3545;
        }

        .validationMessage {
            position: absolute;
            bottom: -23px;
            left: 5px;
            font-size: 12px;
        }
    </style>
</head>
<body class="hold-transition login-page">
    <div class="login-box">
        <!-- /.login-logo -->
        <div class="card card-outline card-danger">
            <div class="card-header text-center">
                <a href="#" class="h1">
                    <img src="~/Content/assets/images/logo.svg" alt="" style="height: 75px;">
                </a>
            </div>
            <div class="card-body">
                <p class="login-box-msg">Set Password</p>
                @if (!string.IsNullOrEmpty(ApplicationUtilities.GetSessionValue("spMsg").ToString()))
                {
                    <span id="errormsg" class="error-signup error" style="color: #F15656; ">@Html.Raw(ApplicationUtilities.GetSessionValue("spMsg").ToString())</span>
                }
                @if (TempData.ContainsKey("pMsg") && !string.IsNullOrEmpty(TempData["pMsg"].ToString()))
                {
                    <span id="errormsg" class="error-signup error" style="color: #F15656; ">@Html.Raw(TempData["pMsg"].ToString())</span>
                }

                @using (Html.BeginForm("SetPassword", "Home", FormMethod.Post, new { @role = "form", @id = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.EncryptedUserName);
                    @Html.HiddenFor(m => m.OldPassword);
                    if (TempData != null && TempData.ContainsKey("msg") != false)
                    {
                        <span class="error-signup">@Html.Raw(TempData["msg"])</span>
                    }

                    <div class="col-lg-14">
                        <div class="input-group mb-3">
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.Password, new { @class = "form-control", @type = "password", @id = "NewPassword", @placeholder = "Password" })
                                <div class="input-group-text">
                                    <span class="fas fa-eye" id="passEye2" onclick="toggleNewPassword1()"></span>
                                </div>
                            </div>
                            <form-control-feedback class="form-text text-danger">
                                @Html.ValidationMessageFor(m => m.Password)
                            </form-control-feedback>
                        </div>
                    </div>
                    <div class="col-lg-14">
                        <div class="input-group mb-3">
                            <div class="input-group">
                                @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control", @type = "password", @id = "ConfirmPassword", @placeholder = "Confirm Password" })
                                <div class="input-group-text">
                                    <span class="fas fa-eye" id="passEye3" onclick="toggleConfirmPassword1()"></span>
                                </div>
                            </div>
                            <form-control-feedback class="form-text text-danger">
                                @Html.ValidationMessageFor(m => m.ConfirmPassword)
                            </form-control-feedback>
                        </div>
                    </div>

                    <div class="row justify-content-end">
                        <div class="col-4">
                            <button type="submit" class="btn btn-primary btn-block">Proceed</button>
                        </div>
                    </div>
                }
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
    </div>
    <!-- /.login-box -->
    @Scripts.Render("~/LoginJS")
    @Scripts.Render("~/UI/JSplugin")
    @Scripts.Render("~/UI/Custom")
    <script>
        // toggle passwords
        function toggleOldPassword1() {
            var input = document.getElementById("OldPassword");
            var eyecon = document.getElementById("passEye1");
            if (input.type === "password") {
                input.type = "text";
                eyecon.classList.remove("fa-eye")
                eyecon.classList.add("fa-eye-slash")

            } else {
                input.type = "password";
                eyecon.classList.remove("fa-eye-slash")
                eyecon.classList.add("fa-eye")
            }
        }
        function toggleNewPassword1() {
            var input = document.getElementById("NewPassword");
            var eyecon = document.getElementById("passEye2");
            if (input.type === "password") {
                input.type = "text";
                eyecon.classList.remove("fa-eye")
                eyecon.classList.add("fa-eye-slash")
            } else {
                input.type = "password";
                eyecon.classList.remove("fa-eye-slash")
                eyecon.classList.add("fa-eye")
            }
        }

        function toggleConfirmPassword1() {
            var input = document.getElementById("ConfirmPassword");
            var eyecon = document.getElementById("passEye3");
            if (input.type === "password") {
                input.type = "text";
                eyecon.classList.remove("fa-eye")
                eyecon.classList.add("fa-eye-slash")
            } else {
                input.type = "password";
                eyecon.classList.remove("fa-eye-slash")
                eyecon.classList.add("fa-eye")
            }
        }
    </script>

</body>
</html>
